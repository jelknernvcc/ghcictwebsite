<h2>CSC 222: Object-Oriented Programming</h2>
<h1>Prerequisites</h1>
</header>

<h2>Context</h2>
<p>
</p><p>
</p><p>
</p>

<h2>What You Need to Know When You Get Here</h2>
<p>
We will work in a Unix
<a href="https://en.wikipedia.org/wiki/Command-line_interface">CLI</a> and
use <a href="https://en.wikipedia.org/wiki/Vim_(text_editor)">Vim</a> as our
text editor. Use the following tutorials to learn what you need:
</p>
<ul>
  <li><a href="http://www.ee.surrey.ac.uk/Teaching/Unix/">UNIX Tutorial for
  Beginners</a>. Read
  <a href="http://www.ee.surrey.ac.uk/Teaching/Unix/unixintro.html">
  Introduction to the UNIX Operating System</a> and complete Tutorials
  <a href="http://www.ee.surrey.ac.uk/Teaching/Unix/unix1.html">One</a>,
  <a href="http://www.ee.surrey.ac.uk/Teaching/Unix/unix2.html">Two</a>, and
  <a href="http://www.ee.surrey.ac.uk/Teaching/Unix/unix3.html">Three</a>.</li>

  <li><b>VIM Tutor</b>. At your linux terminal prompt, type:
  <code>vimtutor</code> and hit enter. This loads a script that copies
  a text file to the <code>/tmp</code> and load it into vim. File contains
  a tutorial on using this power, but somewhat difficult to get used to at
  first editor. Use it to learn vim.</li> 
</ul>

<h2>HelloCSC</h2>
<p>
Now that we have the tools we need, let's create our first Java program.
</p>
<ol>
  <li>Use vim to create a text file named <code>HelloCSC.java</code> with
  the following contents:
  <pre>
  public class HelloCSC {
      public static void main(String[] args) {
          System.out.println("Hello, CSC 201, let's learn some Java!");
      }
  }</pre>
  Note that the name of the file is important. Java requires that the
  name of the class, <code>HelloCSC</code> in this case, be the same as the name
  of the file before the <code>.java</code> file extention.
  </li>

  <li>From the unix command prompt with the current working directory
  containing your <code>HelloCSC.java</code> file, run the following command:
  <pre>
  $ javac HelloCSC.java</pre>
  This will create a new file named <code>HelloCSC.class</code> that contains
  <a href="https://en.wikipedia.org/wiki/Java_bytecode">Java bytecode</a> that
  runs on a
  <a href="https://en.wikipedia.org/wiki/Java_virtual_machine">Java virtual
  machine</a>.
  </li>
  <li>
  To run the bytecode, use:
  <pre>
  $ java HelloCSC</pre>
  and you should see the message inside the
  <code>System.out.println(...)</code> appear on the screen.
  </li>
</ol>

<h2>A More Interesting Example</h2>
<p>
Here is another more interesting example, activity 1.3 from your curriculum.
</p>
<ol>
  <li>Use vim to create a text file named <code>Act1_3.java</code> with
  the following contents:
  <pre>
  public class Act1_3 {
      public static void main(String[] args) {
          double a = 3.14159265;
          double b;

          int d = 3;

          b = ((int)(a * Math.pow(10.0, d) + 0.5)) / Math.pow(10.0, d);

          System.out.println(b);
      }
  }</pre>
  </li>

  <li>From the unix command prompt with the current working directory
  containing your <code>Act1_3.java</code> file, run the following command:
  <pre>
  $ javac Act1_3.java</pre>
  This will create a new file named <code>Act1_3.class</code> with 
  Java bytecode.
  </li>
  <li>
  Again, to run the bytecode, use:
  <pre>
  $ java Act1_3</pre>
  This will display the value <code>3.142</code> on the screen, indicating your
  algorithm works correctly.
  </li>
</ol>

<h2>Making Vim a Lightweight Java IDE</h2>
<p>
We can bind function keys in Vim so that we don't need to leave the editor to
compile and run our Java code.
</p>
<p>Use vim to create a text file named <code>.vimrc</code> in your
<a href="https://en.wikipedia.org/wiki/Home_directory">home directory</a> with
the following contents:
</p>
<pre style="margin-left: 2em;">
" .vimrc
"
" Created by Jeff Elkner and Marco Sirabella 24 September 2016
"
" Turn on systax highlighting and autoindenting
syntax enable
filetype indent on
" set autoindent width to 4 spaces
set et
set sw=4
set smarttab
" Bind &lt;f9&gt; to compile current java source file.
map &lt;f9&gt; :w\|!javac % &lt;cr&gt;
" Bind &lt;f10&gt; to run compiled java file.
map &lt;f10&gt; :w\|!java %:r &lt;cr&gt;
</pre>
<p>
You will now be able to compile your Java source files by pressing the
<code>&lt;F9&gt;</code> key and run them by pressing the
<code>&lt;F10&gt;</code> key.
</p>

